<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Autoload\ClassLoader" namespace="Composer\Autoload" name="ClassLoader" abstract="false" final="false" start="43" end="373">
  <file path="/var/www/_modules/campaignmonitor/trunk/docs/en/phpdox/../../../third_party/vendor/composer" file="ClassLoader.php" realpath="/var/www/_modules/campaignmonitor/trunk/third_party/vendor/composer/ClassLoader.php" size="11669" time="2015-03-14T10:22:26+13:00" unixtime="1426281746" sha1="fc59189629ce674c4e9734a06ba8e257c3eb3b72" relative="third_party/vendor/composer/ClassLoader.php"/>
  <docblock>
    <description compact="ClassLoader implements a PSR-0 class loader">See https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md

    $loader = new \Composer\Autoload\ClassLoader();

    // register classes with namespaces
    $loader-&gt;add('Symfony\Component', __DIR__.'/component');
    $loader-&gt;add('Symfony',           __DIR__.'/framework');

    // activate the autoloader
    $loader-&gt;register();

    // to enable searching the include path (eg. for PEAR packages)
    $loader-&gt;setUseIncludePath(true);

In this example, if you try to use a class in the Symfony\Component
namespace or one of its children (Symfony\Component\Console for instance),
the autoloader will first look for the class under the component/
directory, and it will then fallback to the framework/ directory if not
found before giving up.

This class is loosely based on the Symfony UniversalClassLoader.</description>
    <author value="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <member name="prefixLengthsPsr4" type="array" visibility="private" line="46"/>
  <member name="prefixDirsPsr4" type="array" visibility="private" line="47"/>
  <member name="fallbackDirsPsr4" type="array" visibility="private" line="48"/>
  <member name="prefixesPsr0" type="array" visibility="private" line="51"/>
  <member name="fallbackDirsPsr0" type="array" visibility="private" line="52"/>
  <member name="useIncludePath" type="{unknown}" default="false" visibility="private" line="54"/>
  <member name="classMap" type="array" visibility="private" line="55"/>
  <method name="getPrefixes" start="57" end="60" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getPrefixesPsr4" start="62" end="65" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getFallbackDirs" start="67" end="70" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getFallbackDirsPsr4" start="72" end="75" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getClassMap" start="77" end="80" abstract="false" final="false" static="false" visibility="public"/>
  <method name="addClassMap" start="85" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="Class to filename map" type="array" variable="$classMap"/>
    </docblock>
    <parameter name="classMap" byreference="false" type="array"/>
  </method>
  <method name="add" start="102" end="137" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers a set of PSR-0 directories for a given prefix, either appending or prepending to the ones previously set for this prefix."/>
      <param description="The prefix" type="string" variable="$prefix"/>
      <param description="The PSR-0 root directories" type="object" variable="$paths">
        <type full="Composer\Autoload\array|string" namespace="Composer\Autoload" name="array|string"/>
      </param>
      <param description="Whether to prepend the directories" type="object" variable="$prepend">
        <type full="Composer\Autoload\bool" namespace="Composer\Autoload" name="bool"/>
      </param>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="paths" byreference="false" type="{unknown}"/>
    <parameter name="prepend" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="addPsr4" start="149" end="185" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers a set of PSR-4 directories for a given namespace, either appending or prepending to the ones previously set for this namespace."/>
      <param description="The prefix/namespace, with trailing '\\'" type="string" variable="$prefix"/>
      <param description="The PSR-0 base directories" type="object" variable="$paths">
        <type full="Composer\Autoload\array|string" namespace="Composer\Autoload" name="array|string"/>
      </param>
      <param description="Whether to prepend the directories" type="object" variable="$prepend">
        <type full="Composer\Autoload\bool" namespace="Composer\Autoload" name="bool"/>
      </param>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="paths" byreference="false" type="{unknown}"/>
    <parameter name="prepend" byreference="false" type="{unknown}" default="false"/>
    <inline>
      <comment value="Register directories for the root namespace." line="152"/>
    </inline>
  </method>
  <method name="set" start="194" end="201" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers a set of PSR-0 directories for a given prefix, replacing any others previously set for this prefix."/>
      <param description="The prefix" type="string" variable="$prefix"/>
      <param description="The PSR-0 base directories" type="object" variable="$paths">
        <type full="Composer\Autoload\array|string" namespace="Composer\Autoload" name="array|string"/>
      </param>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="paths" byreference="false" type="{unknown}"/>
  </method>
  <method name="setPsr4" start="212" end="224" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers a set of PSR-4 directories for a given namespace, replacing any others previously set for this namespace."/>
      <param description="The prefix/namespace, with trailing '\\'" type="string" variable="$prefix"/>
      <param description="The PSR-4 base directories" type="object" variable="$paths">
        <type full="Composer\Autoload\array|string" namespace="Composer\Autoload" name="array|string"/>
      </param>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="paths" byreference="false" type="{unknown}"/>
  </method>
  <method name="setUseIncludePath" start="231" end="234" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Turns on searching the include path for class files."/>
      <param type="object" variable="$useIncludePath">
        <type full="Composer\Autoload\bool" namespace="Composer\Autoload" name="bool"/>
      </param>
    </docblock>
    <parameter name="useIncludePath" byreference="false" type="{unknown}"/>
  </method>
  <method name="getUseIncludePath" start="242" end="245" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Can be used to check if the autoloader uses the include path to check for classes."/>
      <return type="object">
        <type full="Composer\Autoload\bool" namespace="Composer\Autoload" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="register" start="252" end="255" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Registers this instance as an autoloader."/>
      <param description="Whether to prepend the autoloader or not" type="object" variable="$prepend">
        <type full="Composer\Autoload\bool" namespace="Composer\Autoload" name="bool"/>
      </param>
    </docblock>
    <parameter name="prepend" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="unregister" start="260" end="263" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Unregisters this instance as an autoloader."/>
    </docblock>
  </method>
  <method name="loadClass" start="271" end="278" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Loads the given class or interface."/>
      <param description="The name of the class" type="string" variable="$class"/>
      <return description="True if loaded, null otherwise" type="object">
        <type full="Composer\Autoload\bool|null" namespace="Composer\Autoload" name="bool|null"/>
      </return>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="findFile" start="287" end="312" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Finds the path to the file where the class is defined."/>
      <param description="The name of the class" type="string" variable="$class"/>
      <return description="The path if found, false otherwise" type="object">
        <type full="Composer\Autoload\string|false" namespace="Composer\Autoload" name="string|false"/>
      </return>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="work around for PHP 5.3.0 - 5.3.2 https://bugs.php.net/50731" line="289"/>
      <comment value="class map lookup" line="294"/>
      <comment value="Search for Hack files if we are running on HHVM" line="301"/>
      <comment value="Remember that this class does not exist." line="307"/>
    </inline>
  </method>
  <method name="findFileWithExtension" start="314" end="372" abstract="false" final="false" static="false" visibility="private">
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="ext" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="PSR-4 lookup" line="316"/>
      <comment value="PSR-4 fallback dirs" line="332"/>
      <comment value="PSR-0 lookup" line="339"/>
      <comment value="namespaced class name" line="341"/>
      <comment value="PSR-0 fallback dirs" line="361"/>
      <comment value="PSR-0 include paths." line="368"/>
    </inline>
  </method>
</class>
